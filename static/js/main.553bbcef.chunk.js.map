{"version":3,"sources":["fb.png","gh.png","components/Navigator/Navigator.js","components/SkillBars/SkillBars.js","particlesjs-config.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navigator","props","colorTheme","react_default","a","createElement","className","id","src","alt","href","SkillBars","params","particles","number","value","density","enable","value_area","color","shape","type","stroke","width","polygon","nb_sides","image","height","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","push","particles_nb","remove","retina_detect","App","particles_default","components_Navigator_Navigator","fbIcon","ghIcon","components_SkillBars_SkillBars","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.553bbcef.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fb.b71bc541.png\";","module.exports = __webpack_public_path__ + \"static/media/gh.3891e938.png\";","import React from 'react';\r\nimport './Navigator.css';\r\nconst Navigator = (props) =>{\r\n\tconst {colorTheme} = props;\r\n\treturn(\r\n\t\t<div className=\"Navigator\">\r\n\t\t\t<div id=\"magic-click\">\r\n\t\t\t\t<img src=\"http://simpleicon.com/wp-content/uploads/magic.png\" alt=\"magic-icon\" />\r\n\t\t\t\t<div>CLick Me</div>\r\n\t\t\t</div>\r\n\t\t\t<div id=\"left-menu\">\r\n\t\t\t\t<a href=\"#about\" className=\"Menu-Item\">About</a>\r\n\t\t\t\t<a href=\"#skill\" className=\"Menu-Item\">Skills</a>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default Navigator;","import React from 'react';\r\nimport './SkillBars.css';\r\nconst SkillBar = ({name, rate}) =>{\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<p>{name.toUpperCase()}</p>\r\n\t\t\t<div className=\"skill-container\">\r\n\t\t\t  <div className=\"skills html\">{rate}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nconst SkillBars =(props)=>{\r\n\treturn(\r\n\t\t<div className=\"skill-bars\">\r\n\t\t\t<h2> In My Very Subjective Evaluation </h2>\r\n\t\t\t<p>HTML</p>\r\n\t\t\t<div className=\"skill-container\">\r\n\t\t\t  <div className=\"skills html\">70%</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<p>CSS</p>\r\n\t\t\t<div className=\"skill-container\">\r\n\t\t\t  <div className=\"skills css\">30%</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<p>JavaScript</p>\r\n\t\t\t<div className=\"skill-container\">\r\n\t\t\t  <div className=\"skills js\">55%</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<p>React</p>\r\n\t\t\t<div className=\"skill-container\">\r\n\t\t\t  <div className=\"skills react\">60%</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default SkillBars;","const params={\n  \"particles\": {\n    \"number\": {\n      \"value\": 90,\n      \"density\": {\n        \"enable\": false,\n        \"value_area\": 800\n      }\n    },\n    \"color\": {\n      \"value\": \"#2bc834\"\n    },\n    \"shape\": {\n      \"type\": \"circle\",\n      \"stroke\": {\n        \"width\": 0,\n        \"color\": \"#000000\"\n      },\n      \"polygon\": {\n        \"nb_sides\": 5\n      },\n      \"image\": {\n        \"width\": 100,\n        \"height\": 100\n      }\n    },\n    \"opacity\": {\n      \"value\": 0.5,\n      \"random\": true,\n      \"anim\": {\n        \"enable\": false,\n        \"speed\": 1,\n        \"opacity_min\": 0.1,\n        \"sync\": false\n      }\n    },\n    \"size\": {\n      \"value\": 12.02559045649142,\n      \"random\": true,\n      \"anim\": {\n        \"enable\": false,\n        \"speed\": 40,\n        \"size_min\": 0.1,\n        \"sync\": false\n      }\n    },\n    \"line_linked\": {\n      \"enable\": false,\n      \"distance\": 500,\n      \"color\": \"#ffffff\",\n      \"opacity\": 0.4,\n      \"width\": 2\n    },\n    \"move\": {\n      \"enable\": true,\n      \"speed\": 3,\n      \"direction\": \"bottom\",\n      \"random\": false,\n      \"straight\": false,\n      \"out_mode\": \"out\",\n      \"bounce\": false,\n      \"attract\": {\n        \"enable\": false,\n        \"rotateX\": 600,\n        \"rotateY\": 1200\n      }\n    }\n  },\n  \"interactivity\": {\n    \"detect_on\": \"canvas\",\n    \"events\": {\n      \"onhover\": {\n        \"enable\": false,\n        \"mode\": \"bubble\"\n      },\n      \"onclick\": {\n        \"enable\": false,\n        \"mode\": \"repulse\"\n      },\n      \"resize\": true\n    },\n    \"modes\": {\n      \"grab\": {\n        \"distance\": 400,\n        \"line_linked\": {\n          \"opacity\": 0.5\n        }\n      },\n      \"bubble\": {\n        \"distance\": 400,\n        \"size\": 4,\n        \"duration\": 0.3,\n        \"opacity\": 1,\n        \"speed\": 3\n      },\n      \"repulse\": {\n        \"distance\": 200,\n        \"duration\": 0.4\n      },\n      \"push\": {\n        \"particles_nb\": 4\n      },\n      \"remove\": {\n        \"particles_nb\": 2\n      }\n    }\n  },\n  \"retina_detect\": true\n}\nexport default params;","import React, { Component } from 'react';\nimport Navigator from './components/Navigator/Navigator';\nimport SkillBars from './components/SkillBars/SkillBars'; \nimport Particles from 'react-particles-js';\nimport params from './particlesjs-config.js';\nimport fbIcon from './fb.png';\nimport ghIcon from './gh.png';\nimport './App.css';\t\nimport tachyons from 'tachyons';\n// import './animate.min.css';\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n          <Particles params={params} className=\"particles\"/>\n          <Navigator />\n          <div className=\"main session1\">\n            <h1> Hi, I'm Dinh </h1>\n            <h2> I build Web, and I'm new here </h2>\n            <div className=\"icon-container\">\n              <a href=\"https://github.com/ngnhatdinh2\"> <img className=\"grow\" src={fbIcon} alt=\"fb Logo\"/> </a>\n              <a href=\"https://www.facebook.com/nowyouareseeingmyprofile\"> <img className=\"grow\" src={ghIcon} alt=\"gh Logo\"/> </a>\n            </div>\n          </div>\n          <div className=\"main session2\" id=\"about\">\n            <h2> Lorem </h2>\n            <p>Why do we use it?\n              It is a <span>long established fact</span> that a reader will be distracted\n              by the readable content of a page when looking at its layout. \n              The point of using <span>Lorem Ipsum</span> is that it has a more-or-less\n              normal distribution of letters, as opposed to using '<span>Content</span> \n              here, content here', making it look like readable English. <span>Many desktop</span>\n              publishing packages and web page editors now use Lorem Ipsum as their default\n              model text, and a search for <span>'lorem ipsum'</span> will uncover many web sites\n              still in their infancy. <span>Various</span> versions have evolved over the years, sometimes\n              by accident, sometimes on purpose (injected humour and the like). \n            </p>\n          </div>\n          <SkillBars id=\"skill\"/>\n      </div>  \n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}